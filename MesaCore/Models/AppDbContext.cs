// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MesaCore.Models;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Clienteimpresorasfx> Clienteimpresorasfx { get; set; }

    public virtual DbSet<Estatusimpresorasfx> Estatusimpresorasfx { get; set; }

    public virtual DbSet<Estatusproyectoimpresorasfx> Estatusproyectoimpresorasfx { get; set; }

    public virtual DbSet<Impresionesalfx> Impresionesalfx { get; set; }

    public virtual DbSet<Impresionescufx> Impresionescufx { get; set; }

    public virtual DbSet<Impresorasalfx> Impresorasalfx { get; set; }

    public virtual DbSet<Impresorascufx> Impresorascufx { get; set; }

    public virtual DbSet<Plantaimpresorasfx> Plantaimpresorasfx { get; set; }

    public virtual DbSet<Proyectosfxcu> Proyectosfxcu { get; set; }

    public virtual DbSet<Proyectosfxsal> Proyectosfxsal { get; set; }

    public virtual DbSet<Registrodeimpresorasfx> Registrodeimpresorasfx { get; set; }

    public virtual DbSet<Solicitanteimpresorafx> Solicitanteimpresorafx { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Clienteimpresorasfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_ClienteImpresorasFx");

            entity.ToTable("CLIENTEIMPRESORASFX");

            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Estatusimpresorasfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_EstatusImpresorasFx");

            entity.ToTable("ESTATUSIMPRESORASFX");

            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Estatusproyectoimpresorasfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_EstatusProyectoFx");

            entity.ToTable("ESTATUSPROYECTOIMPRESORASFX");

            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Impresionesalfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_ImpresionesAlFx");

            entity.ToTable("IMPRESIONESALFX");

            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("fecha");
            entity.Property(e => e.Longitud)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("longitud");
            entity.Property(e => e.PesoGr)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("pesoGr");
            entity.Property(e => e.PrecioExterno)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precioExterno");
            entity.Property(e => e.PrecioInterno)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precioInterno");
            entity.Property(e => e.TiempoImpresion)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("tiempoImpresion");
            entity.Property(e => e.Version).HasColumnName("version");
        });

        modelBuilder.Entity<Impresionescufx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_ImpresionesCuFx");

            entity.ToTable("IMPRESIONESCUFX");

            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("fecha");
            entity.Property(e => e.Longitud)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("longitud");
            entity.Property(e => e.PesoGr)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("pesoGr");
            entity.Property(e => e.PrecioExterno)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("precioExterno");
            entity.Property(e => e.PrecioInterno)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("precioInterno");
            entity.Property(e => e.TiempoImpresion)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("tiempoImpresion");
            entity.Property(e => e.Version).HasColumnName("version");
        });

        modelBuilder.Entity<Impresorasalfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_ImpresorasFx");

            entity.ToTable("IMPRESORASALFX");

            entity.Property(e => e.ArchivoFai)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("archivoFAI");
            entity.Property(e => e.ClienteId).HasColumnName("clienteId");
            entity.Property(e => e.Codigo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Comentarios)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("comentarios");
            entity.Property(e => e.EntregaLaboratorio)
                .HasColumnType("datetime")
                .HasColumnName("entregaLaboratorio");
            entity.Property(e => e.EstatusId).HasColumnName("estatusId");
            entity.Property(e => e.Fai).HasColumnName("FAI");
            entity.Property(e => e.LiberacionLaboratorio)
                .HasColumnType("datetime")
                .HasColumnName("liberacionLaboratorio");
            entity.Property(e => e.NDibujo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("n_Dibujo");
            entity.Property(e => e.NParte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("n_Parte");
            entity.Property(e => e.ProyectoId).HasColumnName("proyectoId");
            entity.Property(e => e.Revision)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("revision");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Impresorasalfx)
                .HasForeignKey(d => d.ClienteId)
                .HasConstraintName("fK_impresorasCliente");

            entity.HasOne(d => d.Estatus).WithMany(p => p.Impresorasalfx)
                .HasForeignKey(d => d.EstatusId)
                .HasConstraintName("fk_EstatusImpresorasFx");

            entity.HasOne(d => d.Proyecto).WithMany(p => p.Impresorasalfx)
                .HasForeignKey(d => d.ProyectoId)
                .HasConstraintName("fk_ImpresoraProyecto");
        });

        modelBuilder.Entity<Impresorascufx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_ImpresorasFxCu");

            entity.ToTable("IMPRESORASCUFX");

            entity.Property(e => e.ArchivoFai)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("archivoFAI");
            entity.Property(e => e.ClienteId).HasColumnName("clienteId");
            entity.Property(e => e.Codigo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Comentarios)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("comentarios");
            entity.Property(e => e.EntregaLaboratorio)
                .HasColumnType("datetime")
                .HasColumnName("entregaLaboratorio");
            entity.Property(e => e.EstatusId).HasColumnName("estatusId");
            entity.Property(e => e.Fai).HasColumnName("FAI");
            entity.Property(e => e.LiberacionLaboratorio)
                .HasColumnType("datetime")
                .HasColumnName("liberacionLaboratorio");
            entity.Property(e => e.NDibujo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("n_Dibujo");
            entity.Property(e => e.NParte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("n_Parte");
            entity.Property(e => e.ProyectoId).HasColumnName("proyectoId");
            entity.Property(e => e.Revision)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("revision");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Impresorascufx)
                .HasForeignKey(d => d.ClienteId)
                .HasConstraintName("fk_impresorasClienteCuFx");

            entity.HasOne(d => d.Estatus).WithMany(p => p.Impresorascufx)
                .HasForeignKey(d => d.EstatusId)
                .HasConstraintName("fk_EstatusImpresorasCuFx");

            entity.HasOne(d => d.Proyecto).WithMany(p => p.Impresorascufx)
                .HasForeignKey(d => d.ProyectoId)
                .HasConstraintName("fk_ImpresoraProyectoCu");
        });

        modelBuilder.Entity<Plantaimpresorasfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_PlantaImpresorasFx");

            entity.ToTable("PLANTAIMPRESORASFX");

            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Proyectosfxcu>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_proyectosCU");

            entity.ToTable("PROYECTOSFXCU");

            entity.Property(e => e.EstatusId).HasColumnName("estatusId");
            entity.Property(e => e.FechaDeLaSolicitud)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaDeLaSolicitud");
            entity.Property(e => e.NombreDelProyecto)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("nombreDelProyecto");
            entity.Property(e => e.PlantaId).HasColumnName("plantaId");
            entity.Property(e => e.SolicitanteId).HasColumnName("solicitanteId");

            entity.HasOne(d => d.Estatus).WithMany(p => p.Proyectosfxcu)
                .HasForeignKey(d => d.EstatusId)
                .HasConstraintName("fk_proyectoEstatusCU");

            entity.HasOne(d => d.Planta).WithMany(p => p.Proyectosfxcu)
                .HasForeignKey(d => d.PlantaId)
                .HasConstraintName("fk_proyectoPlantaCU");

            entity.HasOne(d => d.Solicitante).WithMany(p => p.Proyectosfxcu)
                .HasForeignKey(d => d.SolicitanteId)
                .HasConstraintName("fk_proyectoSolicitanteCU");
        });

        modelBuilder.Entity<Proyectosfxsal>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_proyectos");

            entity.ToTable("PROYECTOSFXSAL");

            entity.Property(e => e.EstatusId).HasColumnName("estatusId");
            entity.Property(e => e.FechaDeLaSolicitud)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaDeLaSolicitud");
            entity.Property(e => e.NombreDelProyecto)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("nombreDelProyecto");
            entity.Property(e => e.PlantaId).HasColumnName("plantaId");
            entity.Property(e => e.SolicitanteId).HasColumnName("solicitanteId");

            entity.HasOne(d => d.Estatus).WithMany(p => p.Proyectosfxsal)
                .HasForeignKey(d => d.EstatusId)
                .HasConstraintName("fk_proyectoEstatus");

            entity.HasOne(d => d.Planta).WithMany(p => p.Proyectosfxsal)
                .HasForeignKey(d => d.PlantaId)
                .HasConstraintName("fk_proyectoPlanta");

            entity.HasOne(d => d.Solicitante).WithMany(p => p.Proyectosfxsal)
                .HasForeignKey(d => d.SolicitanteId)
                .HasConstraintName("fk_proyectoSolicitante");
        });

        modelBuilder.Entity<Registrodeimpresorasfx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_RegistroDeImpresorasFx");

            entity.ToTable("REGISTRODEIMPRESORASFX");

            entity.Property(e => e.Archivo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("archivo");
            entity.Property(e => e.Comentarios)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("comentarios");
            entity.Property(e => e.FechaDeSolicitud)
                .HasColumnType("datetime")
                .HasColumnName("fechaDeSolicitud");
            entity.Property(e => e.NombreDelProyecto)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombreDelProyecto");
            entity.Property(e => e.SolicitanteId).HasColumnName("solicitanteId");

            entity.HasOne(d => d.Solicitante).WithMany(p => p.Registrodeimpresorasfx)
                .HasForeignKey(d => d.SolicitanteId)
                .HasConstraintName("fk_SolicitanteRegistroImpresorasFx");
        });

        modelBuilder.Entity<Solicitanteimpresorafx>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_SolicitudImpresoraFx");

            entity.ToTable("SOLICITANTEIMPRESORAFX");

            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_Usuario");

            entity.ToTable("USUARIO");

            entity.Property(e => e.Clave)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("clave");
            entity.Property(e => e.Correo)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("correo");
            entity.Property(e => e.FechaDeExpiracionToken)
                .HasColumnType("datetime")
                .HasColumnName("fechaDeExpiracionToken");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.RefrescarToken)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("refrescarToken");
            entity.Property(e => e.Rol)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("rol");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}